{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/set-functions.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;ACoBA,YAAY,CAAC;;AAEb,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,YAAY,EAAE;AACzC,SAAK,EAAE,IAAI;CACd,CAAC,CAAC;AACH,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC;AACpC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;AACtB,OAAO,CAAC,UAAU,GAAG,UAAU,CAAC;;AAPzB,SAAS,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE;AAC/B,gBAAY,CAAC;;AAEb,QAAI,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;;AAEvB,KAAC,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE;AACrB,YAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;AACb,kBAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACpB;KACJ,CAAC,CAAC;;AAEH,WAAO,MAAM,CAAC;CACjB;;;;;;;;;;AASM,SAAS,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE;AACxB,gBAAY,CAAC;;AAEb,QAAI,MAAM,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;;AAExB,KAAC,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE;AACrB,YAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;AACb,kBAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACpB;KACJ,CAAC,CAAC;;AAEH,WAAO,MAAM,CAAC;CACjB;;AAEM,IAAI,GAAG,GAAG,KAAK,CAAC;;AAYvB,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;;;;;;;;;AAHX,SAAS,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE;AAC7B,gBAAY,CAAC;;AAEb,QAAI,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC;;AAEvB,KAAC,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE;AACrB,YAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;AACd,kBAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACpB;KACJ,CAAC,CAAC;;AAEH,WAAO,MAAM,CAAC;CACjB;;;;;;;;;AASM,IAAI,QAAQ,GAAG,UAAU,CAAC;AAajC,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC","file":"set-functions.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\r\n * JavaScript Set operations\r\n *\r\n * All functions expect an ES6 Set type or a compatible polyfill.\r\n */\r\n\r\n/*\r\n    It seems that all methods of iteration (forEach, for-of, iterator) were approximately equal in performance, so I\r\n    used forEach as it is the most widely supported.\r\n\r\n    See http://jsperf.com/set-iteration\r\n */\r\n\r\n/**\r\n * The set of items in a and b\r\n *\r\n * @param {Set} a\r\n * @param {Set} b\r\n * @returns {Set}\r\n */\r\nexport function intersection(a, b) {\r\n    'use strict';\r\n\r\n    var result = new Set();\r\n\r\n    a.forEach(function(item) {\r\n        if (b.has(item)) {\r\n            result.add(item);\r\n        }\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * The set of items in a or b\r\n *\r\n * @param {Set} a\r\n * @param {Set} b\r\n * @returns {Set}\r\n */\r\nexport function union(a, b) {\r\n    'use strict';\r\n\r\n    var result = new Set(a);\r\n\r\n    b.forEach(function(item) {\r\n        if (b.has(item)) {\r\n            result.add(item);\r\n        }\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\nexport var add = union;\r\n\r\n/**\r\n * The set of items in a but not in b\r\n *\r\n * @param {Set} a\r\n * @param {Set} b\r\n * @returns {Set}\r\n */\r\nexport function difference(a, b) {\r\n    'use strict';\r\n\r\n    var result = new Set();\r\n\r\n    a.forEach(function(item) {\r\n        if (!b.has(item)) {\r\n            result.add(item);\r\n        }\r\n    });\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * The set of items in a but not in b\r\n *\r\n * @param {Set} a\r\n * @param {Set} b\r\n * @returns {Set}\r\n */\r\nexport var subtract = difference;\r\n"]}